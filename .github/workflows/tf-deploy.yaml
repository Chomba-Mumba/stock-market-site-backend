name: 'Deploy AWS Resources'

on:
  workflow_run:
    workflows: ["Zip and Upload Lambda Functions"]  # The name of the test workflow
    types: [completed]
  pull_request:
    branches:
      - main
env:
  TF_LOG: INFO
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
jobs:  
  To-Zip:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Zip
      run: sudo apt-get install zip

    - name: Zip Lambda Functions
      run: |
        for dir in *_lambda; do
          if [ -d "$dir" ]; then
            zip -r "artifacts/lambda/${dir}.zip" "$dir"
          fi
        done

    - name: Upload Artifacts (Store ZIP Locally)
      uses: actions/upload-artifact@v3
      with:
        name: lambda-zips
        path: artifacts/lambda/*.zip


  terraform:
    needs: To-Zip
    name: "Terraform infrastructure change management"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Move Artifacts
        id: Move
        run: |
          if [ -d "/artifacts/lambda" ];
            mv artifacts/lambda ./terraform/
          fi
      - name: Checkout the repositoryy to the runner
        uses: actions/checkout@v4

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
         terraform_version: 1.3.0
      
      - name: Terraform init
        id: init
        run: terraform init

      - name: Terraform format
        id: format
        run: terraform fmt -check

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -out=tfplan -no-color -input=false
        continue-on-error: true
      
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      
      - name: Terrafrom Apply
        if: steps.plan.outcome == 'success'
        run: terraform apply -auto-approve tfplan